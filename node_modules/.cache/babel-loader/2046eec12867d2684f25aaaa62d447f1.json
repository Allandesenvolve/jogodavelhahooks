{"ast":null,"code":"var _jsxFileName = \"C:\\\\GIT-PROJETO\\\\teste\\\\tictactoe\\\\src\\\\TicTacToe.js\";\nimport React, { useState } from 'react';\nimport './TicTacToe.css';\n\nfunction TicTacToe() {\n  //const emptyBoard = Array(9).fill(\"\");\n  const emptyBoard = [\"O\", \"X\", \"X\", \"O\", \"X\", \"X\", \"O\", \"X\", \"X\"];\n  const [board, setBoard] = useState(emptyBoard);\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Jogo da velha\"), React.createElement(\"div\", {\n    className: \"board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, board.map((item, index) => React.createElement(\"div\", {\n    key: index,\n    className: `cell ${item}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, item))));\n}\n\nexport default TicTacToe;","map":{"version":3,"sources":["C:/GIT-PROJETO/teste/tictactoe/src/TicTacToe.js"],"names":["React","useState","TicTacToe","emptyBoard","board","setBoard","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAO,iBAAP;;AAEA,SAASC,SAAT,GAAqB;AACnB;AACA,QAAMC,UAAU,GAAG,CAEjB,GAFiB,EAEZ,GAFY,EAEP,GAFO,EAGjB,GAHiB,EAGZ,GAHY,EAGP,GAHO,EAIjB,GAJiB,EAIZ,GAJY,EAIP,GAJO,CAAnB;AASA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,UAAD,CAAlC;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFA,EAKA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KACR;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,SAAS,EAAG,QAAOD,IAAK,EAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMEA,IANF,CADF,CADH,CALA,CADF;AAqBD;;AAED,eAAeL,SAAf","sourcesContent":["import React, { useState} from 'react';\nimport './TicTacToe.css';\n\nfunction TicTacToe() {\n  //const emptyBoard = Array(9).fill(\"\");\n  const emptyBoard = [\n\n    \"O\", \"X\", \"X\",\n    \"O\", \"X\", \"X\",\n    \"O\", \"X\", \"X\",\n  ];\n\n\n\n  const [board, setBoard] = useState(emptyBoard);\n\n  return (\n    <main>\n    \n    <h1 className=\"title\">Jogo da velha</h1>\n\n\n    <div className=\"board\">\n      {board.map((item, index) => (\n         <div \n           key={index}         \n           className={`cell ${item}`}\n           >\n\n\n          {item}\n          </div>\n      ))}\n    </div>\n  </main>  \n    \n  );\n}\n\nexport default TicTacToe;\n"]},"metadata":{},"sourceType":"module"}