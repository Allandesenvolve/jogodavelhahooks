{"ast":null,"code":"var _jsxFileName = \"C:\\\\GIT-PROJETO\\\\teste\\\\tictactoe\\\\src\\\\TicTacToe.js\";\nimport React from 'react';\nimport './TicTacToe.css';\n\nfunction TicTacToe() {\n  const emptyBoard = Array(9).fill(\"\");\n  const [board, setBoard] = useState(emptyBoard);\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Jogo da velha\"), React.createElement(\"div\", {\n    className: \"board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, board.map((item, index) => React.createElement(\"div\", {\n    key: index,\n    className: `cell ${item}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, item))));\n}\n\nexport default TicTacToe;","map":{"version":3,"sources":["C:/GIT-PROJETO/teste/tictactoe/src/TicTacToe.js"],"names":["React","TicTacToe","emptyBoard","Array","fill","board","setBoard","useState","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;AAEA,SAASC,SAAT,GAAqB;AACnB,QAAMC,UAAU,GAAGC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,EAAd,CAAnB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAACL,UAAD,CAAlC;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFA,EAKA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KACR;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,SAAS,EAAG,QAAOD,IAAK,EAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMEA,IANF,CADF,CADH,CALA,CADF;AAqBD;;AAED,eAAeR,SAAf","sourcesContent":["import React from 'react';\nimport './TicTacToe.css';\n\nfunction TicTacToe() {\n  const emptyBoard = Array(9).fill(\"\");\n  const [board, setBoard] = useState(emptyBoard);\n\n  return (\n    <main>\n    \n    <h1 className=\"title\">Jogo da velha</h1>\n\n\n    <div className=\"board\">\n      {board.map((item, index) => (\n         <div \n           key={index}         \n           className={`cell ${item}`}\n           >\n\n\n          {item}\n          </div>\n      ))}\n    </div>\n  </main>  \n    \n  );\n}\n\nexport default TicTacToe;\n"]},"metadata":{},"sourceType":"module"}