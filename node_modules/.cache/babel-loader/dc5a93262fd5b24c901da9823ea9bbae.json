{"ast":null,"code":"var _jsxFileName = \"C:\\\\GIT-PROJETO\\\\teste\\\\tictactoe\\\\src\\\\TicTacToe.js\";\nimport React, { useState } from 'react';\nimport './TicTacToe.css';\n\nfunction TicTacToe() {\n  const emptyBoard = Array(9).fill(\"\");\n  const [board, setBoard] = useState(emptyBoard);\n  const [currentPlayer, setCurrentPlayer] = useState(\"O\");\n\n  const handleCellClick = index => {\n    setBoard(board.map((item, itemIndex) => itemIndex === index ? \"currentPlayer\" : item));\n  };\n\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Jogo da velha\"), React.createElement(\"div\", {\n    className: \"board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, board.map((item, index) => React.createElement(\"div\", {\n    key: index,\n    className: `cell ${item}`,\n    onClick: () => handleCellClick(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, item))));\n}\n\nexport default TicTacToe;","map":{"version":3,"sources":["C:/GIT-PROJETO/teste/tictactoe/src/TicTacToe.js"],"names":["React","useState","TicTacToe","emptyBoard","Array","fill","board","setBoard","currentPlayer","setCurrentPlayer","handleCellClick","index","map","item","itemIndex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAO,iBAAP;;AAEA,SAASC,SAAT,GAAqB;AACnB,QAAMC,UAAU,GAAGC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,EAAd,CAAnB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACE,UAAD,CAAlC;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,GAAD,CAAlD;;AAEA,QAAMS,eAAe,GAAIC,KAAD,IAAW;AACjCJ,IAAAA,QAAQ,CACND,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOC,SAAP,KAAqBA,SAAS,KAAKH,KAAd,GAAsB,eAAtB,GAAwCE,IAAvE,CADM,CAAR;AAID,GALD;;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAGE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOF,KAAP,KACT;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,SAAS,EAAG,QAAOE,IAAK,EAF1B;AAGE,IAAA,OAAO,EAAE,MAAMH,eAAe,CAACC,KAAD,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGE,IANH,CADD,CADH,CAHF,CADF;AAmBD;;AAED,eAAeX,SAAf","sourcesContent":["import React, { useState} from 'react';\nimport './TicTacToe.css';\n\nfunction TicTacToe() {\n  const emptyBoard = Array(9).fill(\"\");\n\n  const [board, setBoard] = useState(emptyBoard);\n  const [currentPlayer, setCurrentPlayer] = useState(\"O\");\n\n  const handleCellClick = (index) => {\n    setBoard(\n      board.map((item, itemIndex) => itemIndex === index ? \"currentPlayer\" : item)\n    );\n\n  }\n\n\n\n  return (\n    <main>    \n      <h1 className=\"title\">Jogo da velha</h1>\n\n      <div className=\"board\">\n        {board.map((item, index) => (\n          <div \n            key={index}         \n            className={`cell ${item}`}\n            onClick={() => handleCellClick(index)}\n            >\n\n            {item}\n          </div>\n      ))}\n    </div>\n  </main>  \n    \n  );\n}\n\nexport default TicTacToe;\n"]},"metadata":{},"sourceType":"module"}